@model IEnumerable<MyErp.Models.TPerson>
@using Microsoft.AspNetCore.Mvc.Localization
@using MyErp.Extensions;
@using System
@using System.Collections.Generic
@using MyErp.Resources
@inject LocService SharedLocalizer
@{
    ViewData["Title"] = @SharedLocalizer.GetLocalizedHtmlString("HRAreaIndexPage");

}
@functions {

    string [] Controller(){
        string [] retur = new string [4];
                retur[0]="TPerson";
                retur[1]="Edit";
                retur[2]="Create";
                retur[3]="Delete";
        return retur;
    }
    List<string> Columns(){
        List<string> retur = new List<string>();
        retur.Add("Personal");
        retur.Add(@SharedLocalizer.GetLocalizedHtmlString("DNI"));
        retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Name"));
        retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Surname"));
        retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Address"));
        retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Country"));
        return retur;
    }
    List<string> addLine(string field, string ledit){
        List<string> retLin = new List<string>();
        retLin.Add(field);
        retLin.Add(ledit);
        return retLin;
    }
    List<List<string>>  Fields(){
        List<List<string>> retur = new List<List<string>>();
        retur.Add(addLine("PerId","false"));
        retur.Add(addLine("PerDni","false"));
        retur.Add(addLine("PerName","false"));
        retur.Add(addLine("PerName1","false"));
        retur.Add(addLine("PerAddr","false"));
        retur.Add(addLine("PerAddCtry","false"));
        return retur;
    }

    public IEnumerable<Container> getData(dynamic oTMaterial)
        {
                    IEnumerable<TPerson> fTPersonal = (List<TPerson>)oTMaterial;
                    IEnumerable<Container> TPersonal = fTPersonal.Select(
                        f => new Container() 
                    {
                        CampoId = f.PerId,
                        Campo01 = f.PerDni.ToString(),
                        Campo02 = f.PerName.ToString(),
                        Campo03 = f.PerName1.ToString(),
                        Campo04 = f.PerAddr.ToString(),
                        Campo05 = f.PerAddCtry.ToString(),
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                    });
                    return TPersonal;
        }




    


    string myformat(double? value){
    string ret =string.Format("{0:C2}", value);
    //string rets = value.ToString("N", CultureInfo.InvariantCulture);
    return ret;
    }
    string mycolor(double? value){
    string retcol="red-number";
    if (value >=0 ){
        retcol="blue-number";}
    return retcol;
    }
    string colcolor(int item){
    string retcol="col-text";
    if (item==0)
    {
        retcol="botcol-text";
    }
    return retcol;
    }
    string isVisible(){
        int filter =0;
        try{
        filter = (int) ViewData["Filter"];}
        catch{}
        string retcol="";
        if (filter==0){retcol="invisible";}
        else{retcol="visible";}
        return retcol;
    }
    string fValue (int valor){
        string ret1="";
        if (valor ==1){
        try{
            ret1 = (string)ViewData["Fil1"];
        }
        catch{}
        }
        else{
        try{
            ret1 = (string)ViewData["Fil2"];
        }
        catch{}
        }
        return ret1;
    }
}
@section Styles
{

}

@*<h3>@ViewData["Title"]</h3>*@
<div class = "cont-titles">
 <h3>@SharedLocalizer.GetLocalizedHtmlString("PersonTable")</h3>   
</div>
<div  name="aqui-el-control-grid-1">
    @Html.dataGrid(1,16,Columns(),@getData((List<TPerson>)Model),@Controller(),Fields(),0,"",true,true,"","",true)
</div>