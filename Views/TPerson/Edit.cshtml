@using MyErp.Models
@using System.Linq;
@using Microsoft.AspNetCore.Mvc.Localization
@using MyErp.Extensions;

@using MyErp.Resources
@inject LocService SharedLocalizer
@model TPerson

@{
    Layout = null;  
    Layout = "_LayPer.cshtml";
}

@functions {

    string [] Controller(string table){
        string [] retur = new string [4];
        switch (table)
        {
        case "Career":
                retur[0]="TPerson";
                retur[1]="CarEdit";
                retur[2]="CarCreate";
                retur[3]="CarDelete";
                break;
        case "Contract":
                retur[0]="TPerson";
                retur[1]="ConEdit";
                retur[2]="ConCreate";
                retur[3]="ConDelete";
                break;
        case "Curriculum":
                retur[0]="TPerson";
                retur[1]="CurEdit";
                retur[2]="CurCreate";
                retur[3]="CurDelete";
                break;
        case "Pay":
                retur[0]="TPerson";
                retur[1]="PayEdit";
                retur[2]="PayCreate";
                retur[3]="PayDelete";
                break;
        case "Presence":
                retur[0]="TPerson";
                retur[1]="PreEdit";
                retur[2]="PreCreate";
                retur[3]="PreDelete";
                break;
        case "Review":
                retur[0]="TPerson";
                retur[1]="RevEdit";
                retur[2]="RevCreate";
                retur[3]="RevDelete";
                break;
        case "Training":
                retur[0]="TPerson";
                retur[1]="TraEdit";
                retur[2]="TraCreate";
                retur[3]="TraDelete";
                break;
        default:
            break;
        }
        return retur;
    }
    List<string> Columns(string table){
        List<string> retur = new List<string>();
        switch (table)
        {
            case "Career":
                retur.Add("Career");
                    retur.Add("Fecha");
                    retur.Add("Posicion");
                    retur.Add("Observaciones");
                break;
            case "Contract":
                retur.Add("Contract");
                    retur.Add("Fecha");
                    retur.Add("Observaciones");
                break;
            case "Curriculum":
                retur.Add("Curriculum");
                    retur.Add("Fecha");
                    retur.Add("Area");
                    retur.Add("Descripcion");
                    retur.Add("Nivel");
                    retur.Add("Observaciones");
                break;
            case "Pay":
                retur.Add("Pay");
                    retur.Add("Fecha");
                    retur.Add("Tipo");
                    retur.Add("Retencion");
                    retur.Add("Cuenta");
                break;
            case "Presence":
                retur.Add("Presence");
                    retur.Add("Location");
                    retur.Add("Date");
                    retur.Add("Time");
                break;
            case "Review":
                retur.Add("Review");
                    retur.Add("Fecha");
                    retur.Add("Objetivo");
                    retur.Add("Rating");
                break;
            case "Training":
                retur.Add("Training");
                    retur.Add("Fecha");
                    retur.Add("Area");
                    retur.Add("Curso");
                    retur.Add("Calificacion");
                    retur.Add("Observaciones");
                break;
            default:
                break;
        }
        return retur;
    }
    IEnumerable<Container> getData_Career(dynamic oTMaterial)
        {
            List<string> Column =Columns ("Career");
            IEnumerable<TPCareer> fTPersonal = (List<TPCareer>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.CareId,
                        Campo01 = f.CareDate.ToString(),
                        Campo02 = f.CarePosit.ToString(),
                        Campo03 = f.CareObser.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }
    IEnumerable<Container> getData_Contract(dynamic oTMaterial)
        {
            List<string> Column =Columns ("Career");
            IEnumerable<TPContract> fTPersonal = (List<TPContract>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.ConId,
                        Campo01 = f.ConRevDate.ToString(),
                        Campo02 = f.ConObs.ToString(),
                        Campo03 = "",
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }
   IEnumerable<Container> getData_Curriculum(dynamic oTMaterial)
        {
            List<string> Column =Columns ("Curriculum");
            IEnumerable<TPCurric> fTPersonal = (List<TPCurric>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.CurrId,
                        Campo01 = f.CurrRevDate.ToString(),
                        Campo02 = f.CurrArea.ToString(),
                        Campo03 = f.CurrAreaDesc.ToString(),
                        Campo04 = f.CurrAreaLevel.ToString(),
                        Campo05 = f.CurrObs.ToString(),
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }
    IEnumerable<Container> getData_Pay(dynamic oTMaterial)
        {
            List<string> Column =Columns ("Pay");
            IEnumerable<TPPay> fTPersonal = (List<TPPay>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.PayId,
                        Campo01 = f.PayStDate.ToString(),
                        Campo02 = f.PayType.ToString(),
                        Campo03 = f.PayRet.ToString(),
                        Campo04 = f.PayAccount.ToString(),
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }
    IEnumerable<Container> getData_Presence(dynamic oTMaterial)
        {
            List<string> Column =Columns ("Presen");
            IEnumerable<TPPresen> fTPersonal = (List<TPPresen>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.PresId,
                        Campo01 = f.PresLocal.ToString(),
                        Campo02 = f.PresDateEvent.ToString(),
                        Campo03 = f.PresTimeEvent.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }

    IEnumerable<Container> getData_Review(dynamic oTMaterial)
        {
            List<string> Column =Columns ("Review");
            IEnumerable<TPReview> fTPersonal = (List<TPReview>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.RevId,
                        Campo01 = f.RevDate.ToString(),
                        Campo02 = f.RevObj.ToString(),
                        Campo03 = f.RevObRat.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }

    IEnumerable<Container> getData_Train(dynamic oTMaterial)
        {
            List<string> Column =Columns ("Review");
            IEnumerable<TPTrain> fTPersonal = (List<TPTrain>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.TrainId,
                        Campo01 = f.TrainDate.ToString(),
                        Campo02 = f.TrainArea.ToString(),
                        Campo03 = f.TrainCourse.ToString(),
                        Campo04 = f.TrainCalif.ToString(),
                        Campo05 = f.TrainObser.ToString(),
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }

    string panelBold(int panel)
    {            
        int tpan = (int)ViewData["panel"];
        string cstyle ="";
        if (panel==tpan)
        {cstyle="font-weight:bold";}
        return cstyle;
    }
    string isVisible(int panel){
        string retcol="";
        int opanel = (int)ViewData["panel"];
        if (opanel==panel){
            if (opanel==1){retcol="edit-visible";}
            else{retcol="visible";}
        }
        else{retcol="invisible";}  //invisible
        return retcol;
    }
    int thisPanel(){
         int opanel = (int)ViewData["panel"];
         return opanel;
    }
        string ThisPerId()
    {
        int pid= (int)ViewData["PerId"];//0;//@Model.PerId;
        return pid.ToString();
    }
}

@using (Html.BeginForm()) {

    @Html.HiddenFor(p => p.PerId)
    @Html.ValidationSummary(true)
    <div class=@isVisible(1)>
        <div class="cont-titles">
            <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("PersonData")</h3>
        </div>
        <div class="div-edit">
            <table class="table-edit">
                <tr>
                    <td>
                        <input type="submit" text="Save"    class="dropbtn" value="Update"  name="actionType"/>
                        <input type="submit" text="Discard" class="dropbtn" value="Cancel"  name="actionType"/>
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerName,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerName, new { htmlAttributes = new { @class = "norm-tb-text", @style = "width:300px"} })</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerName)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerName1,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerName1, new { htmlAttributes = new { @class = "norm-tb-text", @style = "width:300px"} })</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerName1)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerDni,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerDni, new { htmlAttributes = new { @class = "norm-tb-text", @style = "width:120px"} })</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerDni)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerBird,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerBird, new { htmlAttributes = new { @class = "norm-tb-text"} })</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerBird)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerBiCity,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerBiCity, new { htmlAttributes = new { @class = "norm-tb-text", @style = "width:200px"} })</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerBiCity)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerBiCtry,new { @class = "norm-lab-text",})</td>
                    <td class="norm-text">
                        @Html.DropDownListFor(p => p.PerBiCtry,
                            new SelectList(DataSource.GetCountry(), "Code", "Name"),new { @class = "norm-tb-text" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerAddr,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerAddr, new { htmlAttributes = new { @class = "norm-tb-text", @style = "width:300px"} })</td>
                    <td>@Html.LabelFor(p => p.PerContDate,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerContDate, new { htmlAttributes = new { @class = "norm-tb-text"} })</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerAddr)</td>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerContDate)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerAddr1,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerAddr1, new { htmlAttributes = new { @class = "norm-tb-text", @style = "width:300px"} })</td>
                    <td>@Html.LabelFor(p => p.PerEntDate,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerEntDate, new { htmlAttributes = new { @class = "norm-tb-text"} })</td>
                </tr>
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerAddr1)</td>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerContDate)</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(p => p.PerAddCtry,new { @class = "norm-lab-text",})</td>
                    <td class="norm-text">
                        @Html.DropDownListFor(p => p.PerAddCtry,
                            new SelectList(DataSource.GetCountry(), "Code", "Name"),new { @class = "norm-tb-text" })
                    </td>
                    <td>@Html.LabelFor(p => p.PerExiDate,new { @class = "norm-lab-text",})</td>
                    <td>@Html.EditorFor(p => p.PerExiDate, new { htmlAttributes = new { @class = "norm-tb-text"} })</td>
                </tr>        
                <tr>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerAddCtry)</td>
                    <td></td>
                    <td>@Html.ValidationMessageFor(p => p.PerExiDate)</td>
                </tr>
            </table>
        </div>
    </div>
    <div class=@isVisible(2)>
        <table class="table-edit" border="1">
            <div class="cont-titles">
                <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("CareerData")</h3>
            </div>
            <div  class="_container" name="aqui-el-control-grid-3">
                @Html.dataGrid(3,6,@Columns("Career"),@getData_Career((List<TPCareer>)ViewBag.ListCareer),@Controller("Career"),Model.PerId)
            </div>
        </table>
    </div>
    <div class=@isVisible(3)>
        <table class="table-edit" border ="1" >
            <div class="cont-titles">
                <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("ContractData")</h3>
            </div>
            <div  class="_container" name="aqui-el-control-grid-4">
                @Html.dataGrid(4,6,@Columns("Contract"),@getData_Contract((List<TPContract>)ViewBag.ListContract),@Controller("Contract"),Model.PerId)
            </div>
        </table>
    </div>    

    <div class=@isVisible(4)>
        <table class="table-edit" border ="1" >
            <div class="cont-titles">
                <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("CurriculumData")</h3>
            </div>
            <div  class="_container" name="aqui-el-control-grid-5">
                @Html.dataGrid(5,6,@Columns("Curriculum"),@getData_Curriculum((List<TPCurric>)ViewBag.ListCurric),@Controller("Curriculum"),Model.PerId)
            </div>
        </table>
    </div>    
    <div class=@isVisible(5)>
        <table class="table-edit" border ="1" >
            <div class="cont-titles">
                <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("PayrollData")</h3>
            </div>
            <div  class="_container" name="aqui-el-control-grid-6">
                @Html.dataGrid(6,6,@Columns("Pay"),@getData_Pay((List<TPPay>)ViewBag.ListPay),@Controller("Pay"),Model.PerId)
            </div>
        </table>
    </div>    
    <div class=@isVisible(6)>
        <table style="width:100%">
            <div class="cont-titles">
                <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("PresenceData")</h3>
            </div>
            <div  class="_container" name="aqui-el-control-grid-7">
                @Html.dataGrid(7,6,@Columns("Presence"),@getData_Presence((List<TPPresen>)ViewBag.ListPre),@Controller("Presence"),Model.PerId)
            </div>
        </table>
    </div>    
    <div class=@isVisible(7)>
        <table class="table-edit" border ="1" >
            <div class="cont-titles">
                <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("ObjectiveReviewmData")</h3>
            </div>
            <div  class="_container" name="aqui-el-control-grid-8">
                @Html.dataGrid(8,6,@Columns("Review"),@getData_Review((List<TPReview>)ViewBag.ListRev),@Controller("Review"),Model.PerId)
            </div>
        </table>
    </div>    
    <div class=@isVisible(8)>
        <table class="table-edit" border ="1" >
            <div class="cont-titles">
                <h3 class="style-data">@SharedLocalizer.GetLocalizedHtmlString("TrainingData")</h3>
            </div>
            <div  class="_container" name="aqui-el-control-grid-9">
                @Html.dataGrid(9,6,@Columns("Training"),@getData_Train((List<TPTrain>)ViewBag.ListTra),@Controller("Training"),Model.PerId)
            </div>
        </table>
    </div>    
}


