@*@{Layout = "_LyIndex";}*@
@using MyErp.Models
@using System.Linq;
@using MyErp.Extensions;
@using MyErp.Resources
 
@inject LocService SharedLocalizer

@functions {

    string [] Controller(string table){
        string [] retur = new string [4];
        switch (table)
        {
        case "Chart":
                retur[0]="TOrganiza";
                retur[1]="CharEdit";            //Edit not enabled
                retur[2]="CharCreate";            //Create not enabled
                retur[3]="CharDelete";     //delete is remove
                break;
        case "Users":
                retur[0]="TOrganiza";
                retur[1]="UserEdit";
                retur[2]="UserCreate";
                retur[3]="UserDelete";
                break;
        default:
            break;
        }
        return retur;
    }
    List<string> addLine(string field, string ledit){
        List<string> retLin = new List<string>();
        retLin.Add(field);
        retLin.Add(ledit);
        return retLin;
    }
    List<List<string>>  Fields(string table){
        List<List<string>> retur = new List<List<string>>();
        switch (table)
        {
            case "Chart":
                retur.Add(addLine("CharId","false"));
                retur.Add(addLine("Charode","false"));
                retur.Add(addLine("CharName","false"));
                retur.Add(addLine("CharHName","false"));
                break;
            case "Users":
                retur.Add(addLine("UserId","false"));
                retur.Add(addLine("UserFirsName","false"));
                retur.Add(addLine("UserLastName","false"));
                break;
            default:
                break;
        }
        return retur;
    }
    List<string> Columns(string table){
        List<string> retur = new List<string>();
        switch (table)
        {
            case "Chart":
                    retur.Add("Chart");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("ChCode"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("ChName"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("ChHeadName"));
                break;
            case "Users":
                    retur.Add("Users");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("FirsName"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("LastName"));
                break;
            default:
                break;
        }
        return retur;
    }
    IEnumerable<Container> getData_Chart(dynamic oTMaterial)
        {
            IEnumerable<VTChart> fTPersonal = (List<VTChart>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.CharId,
                        Campo01 = f.CharCode.ToString(),
                        Campo02 = f.CharName.ToString(),
                        Campo03 = f.CharHName.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }

    IEnumerable<Container> getData_Users(dynamic oTMaterial)
        {
            IEnumerable<TUser> fTPersonal = (List<TUser>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.UserId,
                        Campo01 = f.UserFirstName.ToString(),
                        Campo02 = f.UserLastName.ToString(),
                        Campo03 = "",
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }


    string isVisible(int panel){
        string retcol="";
        int opanel = (int)ViewData["panel"];
        if (opanel==panel){retcol="visible";}
        else{retcol="invisible";}
        return retcol;
    }
}

    <!--Organization-->

    <!--Chart-->
    <div class=@isVisible(2)>
        <div class="cont-titles">
            <h4>@SharedLocalizer.GetLocalizedHtmlString("CharList")</h4>
        </div>
        @Html.dataGrid(20,16,@Columns("Chart"),@getData_Chart((List<VTChart>)ViewBag.ListChar),@Controller("Chart"),@Fields("Chart"))
    @*@await Html.PartialAsync("_pListaChart",(List<VTChart>)ViewBag.ListChar)*@
    </div>
@*
    <!--Languages-->
    <div class=@isVisible(3)>
    @await Html.PartialAsync("_SelectLanguagePartial")
    </div>

    <!--Resources-->
    <div class=@isVisible(4)>
    @await Html.PartialAsync("_SelectLanguagePartial")
    </div>

*@
    <!--Users-->
    <div class=@isVisible(5)>
        <div class="cont-titles">
            <h4>@SharedLocalizer.GetLocalizedHtmlString("CharList")</h4>
        </div>
        @Html.dataGrid(21,16,@Columns("Users"),@getData_Users((List<TUser>)ViewBag.ListUS),@Controller("Users"),@Fields("Users"))
    @*@await Html.PartialAsync("_pListaUsers",(List<TUser>)ViewBag.ListUS)*@
    </div>

    <!--Languages-->
    <div class=@isVisible(3)>
        <tr>
            @SharedLocalizer.GetLocalizedHtmlString("Useddltoselect")
        </tr>
    </div>
</div>
