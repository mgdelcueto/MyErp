@model IEnumerable<MyErp.Models.TSuplier>
@using MyErp.Resources
@using MyErp.Extensions
@inject LocService SharedLocalizer

@{
    ViewData["Title"] = @SharedLocalizer.GetLocalizedHtmlString("PurchasingArea");
}
@functions {

    string [] Controller(){
        string [] retur = new string [4];
                retur[0]="TSuplier";
                retur[1]="Edit";
                retur[2]="Create";
                retur[3]="Delete";
        return retur;
    }
    List<string> addLine(string field, string ledit){
        List<string> retLin = new List<string>();
        retLin.Add(field);
        retLin.Add(ledit);
        return retLin;
    }
    List<List<string>>  Fields(string table){
        List<List<string>> retur = new List<List<string>>();
        switch (table)
        {
            case "Suplier":
                retur.Add(addLine("SupId","false"));
                retur.Add(addLine("CampoKy","false"));
                retur.Add(addLine("SupNif","true"));
                retur.Add(addLine("SupCode","true"));
                retur.Add(addLine("SupRasoc","true"));
                retur.Add(addLine("SupAdCity","true"));
                retur.Add(addLine("SupAdCtry","true"));
                break;
            default:
                break;
        }
        return retur;
    }

    List<string> Columns(string table ){
        List<string> retur = new List<string>();
        switch (table)
        {
            case "Suplier":
                retur.Add("Suplier");
                retur.Add(@SharedLocalizer.GetLocalizedHtmlString("DNI"));
                retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Code"));
                retur.Add(@SharedLocalizer.GetLocalizedHtmlString("RaSoc"));
                retur.Add(@SharedLocalizer.GetLocalizedHtmlString("City"));
                retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Country"));
                break;
            default:
                break;
        }
        return retur;
    }

    public IEnumerable<Container> getData(dynamic oTMaterial)
        {
                    IEnumerable<TSuplier> fTPersonal = (List<TSuplier>)oTMaterial;
                    IEnumerable<Container> TPersonal = fTPersonal.Select(
                        f => new Container() 
                    {
                        CampoId = f.SupId,
                        CampoKy = f.SupId,
                        Campo01 = f.SupNif.ToString(),
                        Campo02 = f.SupCode.ToString(),
                        Campo03 = f.SupRasoc.ToString(),
                        Campo04 = f.SupAdCity.ToString(),
                        Campo05 = f.SupAdCtry.ToString(),
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                    });
                    return TPersonal;
        }


    string myformat(double? value){
    string ret =string.Format("{0:C2}", value);
    //string rets = value.ToString("N", CultureInfo.InvariantCulture);
    return ret;
    }
    string mycolor(double? value){
    string retcol="red-number";
    if (value >=0 ){
        retcol="blue-number";}
    return retcol;
    }
    string colcolor(int item){
    string retcol="col-text";
    if (item==0)
    {
        retcol="botcol-text";
    }
    return retcol;
    }
    string isVisible(){
        int filter =0;
        try{
        filter = (int) ViewData["Filter"];}
        catch{}
        string retcol="";
        if (filter==0){retcol="invisible";}
        else{retcol="visible";}
        return retcol;
    }
    string fValue (int valor){
        string ret1="";
        if (valor ==1){
        try{
            ret1 = (string)ViewData["Fil1"];
        }
        catch{}
        }
        else{
        try{
            ret1 = (string)ViewData["Fil2"];
        }
        catch{}
        }
        return ret1;
    }
}
@section Styles
{

}
<div class = "cont-titles">
 <h3>@SharedLocalizer.GetLocalizedHtmlString("SupList")</h3>   
</div>
@Html.dataGrid(2,16,@Columns("Suplier"),@getData((List<TSuplier>)Model),@Controller(),@Fields("Suplier"),0)
@*
<td><a class="nav-link text-dark" asp-area="" asp-controller="TSuplier" asp-action="Index" asp-route-filter ="1" asp-route-pNam="" asp-route-pNam1="">@SharedLocalizer.GetLocalizedHtmlString("Filter")</a></td>
<div class="@isVisible()">
    @using (Html.BeginForm()) {
        <tr>
            <input type="hidden" name="Filter" value="2"/>
            <td>@SharedLocalizer.GetLocalizedHtmlString("FilterByRaSoc"):</td>
            <td class ="norm-text"><input value ="@fValue(1)" class="norm-text" id="pNam" name="pNam" type="text"></input></td>
            <td>@SharedLocalizer.GetLocalizedHtmlString("FilterByNIF")</td>
            <td class ="norm-text"><input value="@fValue(2)" class ="norm-text" id="pNam1" name="pNam1" type="text"></input></td>
            <td><input type="submit" value="Filter" /></td>
            <td><input type="submit" value="Cancel" name="actionType"/></td>
        </tr>
    }
</div>
<div class="visible">
<table class="table-norm" border="1">
    <tr>
        <th class="head-text">@SharedLocalizer.GetLocalizedHtmlString("NIF")</th> 
        <th class="head-text">@SharedLocalizer.GetLocalizedHtmlString("SupCode")</th>                
        <th class="head-text">@SharedLocalizer.GetLocalizedHtmlString("SupRaSoc")</th>        
        <th class="head-text">@SharedLocalizer.GetLocalizedHtmlString("SupCity")</th>
        <th class="head-text">@SharedLocalizer.GetLocalizedHtmlString("SupCountry")</th>
        <th class="head-text">@SharedLocalizer.GetLocalizedHtmlString("Delete")</th>        
        <th class="head-text">@SharedLocalizer.GetLocalizedHtmlString("Edit")</th>        
    </tr>
    @foreach (var p in Model) {
        <tr>
            <td class ="col-text">@p.SupNif</td>            
            <td class ="norm-text">@p.SupCode</td>
            <td class ="norm-text">@p.SupRasoc</td>
            <td class ="norm-text">@p.SupAdCity</td>
            <td class ="norm-text">@p.SupAdCtry</td>
            <td class="col-text">@Html.ActionLink("Delete", "Delete", new { id = p.SupId }, new { onclick="return confirm('Are you sure?');"})</td>
            <td class="col-text">@Html.ActionLink("Edit", "Edit", new { id = p.SupId ,panel=1,skip =0})</td>
            
        </tr>
    }
</table>
@Html.ActionLink("Add a New Item", "Create")
</div>
*@