@*@{Layout = "_LyIndex";}*@
@using MyErp.Models
@using System.Linq;
@using MyErp.Extensions;
@using MyErp.Resources
@inject LocService SharedLocalizer

@functions {
    string isCode(){
        string  code ="";
        try{
        code = (string)ViewData["Code"];}
        catch{}
        return code;
    }


    string [] Controller(string table){
        string [] retur = new string [4];
        switch (table)
        {
        case "Facility":
                retur[0]="TEngine";
                retur[1]="FacEdit";
                retur[2]="FacCreate";
                retur[3]="FacDelete";
                break;
        case "WCenter":
                retur[0]="TEngine";
                retur[1]="WCeEdit";
                retur[2]="WCeCreate";
                retur[3]="WCeDelete";
                break;
        case "WCenterC":
                retur[0]="TEngine";
                retur[1]="WCoEdit";
                retur[2]="WCoCreate";
                retur[3]="WCoDelete";
                break;
        case "Materials":
                retur[0]="TEngine";
                retur[1]="MatEdit";
                retur[2]="MatCreate";
                retur[3]="MatDelete";
                break;
        case "SLocation":
                retur[0]="TEngine";
                retur[1]="LoEdit";
                retur[2]="LoCreate";
                retur[3]="LoDelete";
                break;
        case "Operators":
                retur[0]="TEngine";
                retur[1]="OphEdit";
                retur[2]="OphCreate";
                retur[3]="OphDelete";
                break;
        case "Trucks":
                retur[0]="TEngine";
                retur[1]="TrEdit";
                retur[2]="TrCreate";
                retur[3]="TrDelete";
                break;
        default:
            break;
        }
        return retur;
    }
    List<string> addLine(string field, string ledit){
        List<string> retLin = new List<string>();
        retLin.Add(field);
        retLin.Add(ledit);
        return retLin;
    }
    List<List<string>>  Fields(string table){
        List<List<string>> retur = new List<List<string>>();
        switch (table)
        {
            case "Facility":
                retur.Add(addLine("FaId","false"));
                retur.Add(addLine("FaCode","false"));
                retur.Add(addLine("FaDescr","true"));
                retur.Add(addLine("FaType","false"));
                break;
            case "WCenter":
                retur.Add(addLine("WcdId","false"));
                retur.Add(addLine("Wccode","false"));
                retur.Add(addLine("Wcdescr","true"));
                retur.Add(addLine("Wctype","false"));
                break;
            case "WCenterC":
                retur.Add(addLine("WcoId","false"));
                retur.Add(addLine("WcoCode","false"));
                retur.Add(addLine("WcoDescr","true"));
                retur.Add(addLine("WcoType","false"));
                break;
            case "Materials":
                retur.Add(addLine("MatId","false"));
                retur.Add(addLine("MatRefer","false"));
                retur.Add(addLine("MatDescr","true"));
                retur.Add(addLine("MatClass","false"));
                break;
            case "SLocation":
                retur.Add(addLine("LocId","false"));
                retur.Add(addLine("LocCode","false"));
                retur.Add(addLine("LocDescr","true"));
                retur.Add(addLine("LocType","false"));
                break;
            case "Operators":
                retur.Add(addLine("OpeId","false"));
                retur.Add(addLine("OpeCode","false"));
                retur.Add(addLine("OpeDesc","true"));
                retur.Add(addLine("OpeCosth","true"));
                retur.Add(addLine("OpeCurcy","false"));
                break;
            case "Trucks":
                retur.Add(addLine("TruckId","false"));
                retur.Add(addLine("TruckCode","false"));
                retur.Add(addLine("TruckDeno","true"));
                break;
            default:
                break;
        }
        return retur;
    }
    List<string> Columns(string table){
        List<string> retur = new List<string>();
        switch (table)
        {
            case "Facility":
                    retur.Add("Facility");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("FcCode"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("FcDescr"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("FcType"));
                break;
            case "WCenter":
                    retur.Add("WCenter");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("WCCode"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("WCDesc"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("WCType"));
                break;
            case "WCenterC":
                    retur.Add("WCenterCo");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Code"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Description"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Type"));
                break;
            case "Materials":
                    retur.Add("Materials");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("MatRefer"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("MatDescr"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("MatClass"));
                break;
            case "SLocation":
                    retur.Add("SLocation");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("LocCode"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("LocDescr"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("LocType"));
                break;
            case "Operators":
                    retur.Add("Review");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Code"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Descr"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Costh"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Curcy"));
                break;
            case "Trucks":
                    retur.Add("Trucks");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Code"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Deno"));
                break;
            default:
                break;
        }
        return retur;
    }
    IEnumerable<Container> getData_Facility(dynamic oTMaterial)
        {
            IEnumerable<TFacility> fTPersonal = (List<TFacility>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.FaId,
                        Campo01 = f.FaCode.ToString(),
                        Campo02 = f.FaDescr.ToString(),
                        Campo03 = f.FaType.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }











    IEnumerable<Container> getData_WCenter(dynamic oTMaterial)
        {
            IEnumerable<TWorkCenter> fTPersonal = (List<TWorkCenter>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.WcdId,
                        Campo01 = f.Wccode.ToString(),
                        Campo02 = f.Wcdescr.ToString(),
                        Campo03 = f.Wctype.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }








    IEnumerable<Container> getData_WCenterC(dynamic oTMaterial)
        {
            IEnumerable<TWccomponent> fTPersonal = (List<TWccomponent>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.WcoId,
                        Campo01 = f.WcoCode.ToString(),
                        Campo02 = f.WcoDescr.ToString(),
                        Campo03 = f.WcoType.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }









    IEnumerable<Container> getData_Materials(dynamic oTMaterial)
        {
            IEnumerable<TMaterial> fTPersonal = (List<TMaterial>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.MatId,
                        Campo01 = f.MatRefer.ToString(),
                        Campo02 = f.MatDescr.ToString(),
                        Campo03 = f.MatClass.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }








    IEnumerable<Container> getData_SLocation(dynamic oTMaterial)
        {
            IEnumerable<TLocation> fTPersonal = (List<TLocation>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.LocId,
                        Campo01 = f.LocCode.ToString(),
                        Campo02 = f.LocDescr.ToString(),
                        Campo03 = f.LocType.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }








    IEnumerable<Container> getData_Operators(dynamic oTMaterial)
        {
            IEnumerable<TOperator> fTPersonal = (List<TOperator>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.OpeId,
                        Campo01 = f.OpeCode.ToString(),
                        Campo02 = f.OpeDesc.ToString(),
                        Campo03 = f.OpeCosth.ToString(),
                        Campo04 = f.OpeCurcy.ToString(),
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }








    IEnumerable<Container> getData_Trucks(dynamic oTMaterial)
        {
            IEnumerable<TCTruck> fTPersonal = (List<TCTruck>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.TruckId,
                        Campo01 = f.TruckCode.ToString(),
                        Campo02 = f.TruckDeno.ToString(),
                        Campo03 = "",
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }








    string isVisible(int panel){
        string retcol="";
        int opanel = (int)ViewData["panel"];
        if (opanel==panel){retcol="visible";}
        else{retcol="invisible";}
        return retcol;
    }
    string errmsg()
    {
        string ret = (string)ViewData["ErrorMs"];
        return ret;
    }

}

    <!--Facilities-->
    <div class=@isVisible(1)>
        <div class = "cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("FacilitiesList")</h3>   
        </div>
        @Html.dataGrid(10,16,@Columns("Facility"),@getData_Facility((List<TFacility>)ViewBag.ListFA),@Controller("Facility"),@Fields("Facility"),0)
    @*@Html.Partial("_pListaFacilities_all",(List<TFacility>)ViewBag.ListFA)*@
    </div>

    <!--Work Centers-->
    <div class=@isVisible(2)>
        <div class = "cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("WorkCenterList")</h3>   
        </div>
        @Html.dataGrid(11,16,@Columns("WCenter"),@getData_WCenter((List<TWorkCenter>)ViewBag.ListProd),@Controller("WCenter"),@Fields("WCenter"),0)
    @*@Html.Partial("_pListaWorkCenters_all",(List<TWorkCenter>)ViewBag.ListProd)*@
    </div>

    <!--Work Centers Components-->

    <div class=@isVisible(3)>
    @*
    @using (Html.BeginForm("Index","TEngine",FormMethod.Post)) {        
    @_
    <table>
            <td>
                <input type="hidden" name="panel" value="3"/>
            </td>

            <td class="medium-text">@SharedLocalizer.GetLocalizedHtmlString("SelectWorkCenter")</td>
            <td class="norm-text">
                @Html.DropDownList("WcdId", (SelectList)ViewBag.ddlReferVD, new { @class ="medium-text" , onchange = "ddlfunc(3,'WcdId',this.value)"})
            </td>
    </table>
    _@
    }
    *@
        <div class = "cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("WorkCenterCompList")</h3>   
        </div>
    <table>
            <td class="norm-lab-text">@SharedLocalizer.GetLocalizedHtmlString("SelectWorkCenter")</td>
            <td class="norm-text">
                @Html.DropDownList("WcdId", (SelectList)ViewBag.ddlReferVD, new { @class ="norm-tb-text" , onchange = "ddlfunc(3,'WcdId',this.value)"})
            </td>
    </table>
 
        @Html.dataGrid(12,16,@Columns("WCenterC"),@getData_WCenterC((List<TWccomponent>)ViewBag.ListPO),@Controller("WCenterC"),@Fields("WCenterC"),0)
    @*@Html.Partial("_pListaWCComponents_all",(List<TWccomponent>)ViewBag.ListPO)*@
    </div>

    <!--Materials-->
    <div class=@isVisible(4)>
    

    @*
    @using (Html.BeginForm("Index","TEngine", new { panel = 4 ,code = @isCode()},FormMethod.Post)){   
    <table>
            @_
            <td>
                <input type="hidden" name="panel" value="4"/>
            </td>
            _@
            <td class="medium-text">@SharedLocalizer.GetLocalizedHtmlString("MaterialClass")</td>
            <td class="norm-text">
                @Html.DropDownList("Code",
               new SelectList(DataSource.GetMCatlassL(), "Code", "Name",@isCode()),new { @class = "norm-text", onchange = "this.form.submit();" })
            </td>
    </table>
    }
    *@
        <div class = "cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("MaterialsList")</h3>   
        </div>
    <table>
            <td class="norm-lab-text">@SharedLocalizer.GetLocalizedHtmlString("MaterialClass")</td>
            <td class="norm-text">
                @Html.DropDownList("Code",
               new SelectList(DataSource.GetMCatlassL(), "Code", "Name",@isCode()),new { @class = "norm-tb-text", onchange = "ddlfunc(4,'code',this.value)" })
            </td>
    </table>
        @Html.dataGrid(13,16,@Columns("Materials"),@getData_Materials((List<TMaterial>)ViewBag.ListMA),@Controller("Materials"),@Fields("Materials"),0)
    @*@Html.Partial("_pListaMaterials_all",(List<TMaterial>)ViewBag.ListMA)*@
    </div>

    <!--Storages-->
    <div class=@isVisible(5)>
        <div class = "cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("StorageLocList")</h3>   
        </div>
        @Html.dataGrid(14,16,@Columns("SLocation"),@getData_SLocation((List<TLocation>)ViewBag.ListLO),@Controller("SLocation"),@Fields("SLocation"),0)
    @*@Html.Partial("_pListaStorages_all",(List<TLocation>)ViewBag.ListLO)*@
    </div>

    <!--Roles-->
    <div class=@isVisible(6)>
        <div class = "cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("OperatorList")</h3>   
        </div>
        @Html.dataGrid(15,16,@Columns("Operators"),@getData_Operators((List<TOperator>)ViewBag.ListOP),@Controller("Operators"),@Fields("Operators"),0)
    @*@Html.Partial("_pListaOperators_all",(List<TOperator>)ViewBag.ListOP)*@
    </div>

    <!--Trucks-->
    <div class=@isVisible(7)>
        <div class = "cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("TrucksList")</h3>   
        </div>
        @Html.dataGrid(16,16,@Columns("Trucks"),@getData_Trucks((List<TCTruck>)ViewBag.ListTruck),@Controller("Trucks"),@Fields("Trucks"),0)
    @*@Html.Partial("_pListaTrucks_all",(List<TCTruck>)ViewBag.ListTruck)*@
    </div>

    <!--Error-->
    <div class=@isVisible(999)>
        <p>
            ERROR:@errmsg()
        </p>
    </div>


</div>
