@*@{Layout = "_LyIndex";}*@
@using MyErp.Models
@model TCTruck
@using MyErp.Extensions;
@using MyErp.Resources
@inject LocService SharedLocalizer
@functions {

    string sDayofWeek(int? ndow){
        string retcol="";
        switch(ndow)
        {
            case 1:
                 retcol = @SharedLocalizer.GetLocalizedHtmlString("Sunday"); 
             break;
            case 2:
                 retcol = @SharedLocalizer.GetLocalizedHtmlString("Monday"); 
             break;
            case 3:
                 retcol = @SharedLocalizer.GetLocalizedHtmlString("Tuesday"); 
             break;
            case 4:
                 retcol = @SharedLocalizer.GetLocalizedHtmlString("Wednesday"); 
             break;
            case 5:
                 retcol = @SharedLocalizer.GetLocalizedHtmlString("Tursday"); 
             break;
            case 6:
                 retcol = @SharedLocalizer.GetLocalizedHtmlString("Friday"); 
             break;
            case 7:
                 retcol = @SharedLocalizer.GetLocalizedHtmlString("Saturday"); 
             break;
             default:
                 retcol="NA";
             break;
        }
        return retcol;
    }
    string [] Controller(string table){
        string [] retur = new string [4];
        switch (table)
        {
        case "TruckSc":
                retur[0]="TEngine";
                retur[1]="TrSEdit";           
                retur[2]="TrSCreate";         
                retur[3]="TrSDelete";    
                break;
        default:
            break;
        }
        return retur;
    }
    List<string> addLine(string field, string ledit){
        List<string> retLin = new List<string>();
        retLin.Add(field);
        retLin.Add(ledit);
        return retLin;
    }
    List<List<string>>  Fields(string table){
        List<List<string>> retur = new List<List<string>>();
        switch (table)
        {
            case "TruckSc":
                retur.Add(addLine("TrScId","false"));
                retur.Add(addLine("CampoKy","false"));
                retur.Add(addLine("TrScDayOfWeek","false"));
                retur.Add(addLine("TrScCrLoadStart","false"));
                retur.Add(addLine("TrScCrDeparture","false"));
                retur.Add(addLine("TrScDeno","true"));
                break;
            default:
                break;
        }
        return retur;
    }
    List<string> Columns(string table){
        List<string> retur = new List<string>();
        switch (table)
        {
            case "TruckSc":
                    retur.Add("TruckSc");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("DayOfWeek"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("LoadStart"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Departure"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("SchDescr"));
                break;
            default:
                break;
        }
        return retur;
    }
    IEnumerable<Container> getData_TruckSc(dynamic oTMaterial)
        {
            IEnumerable<TCTrSched> fTPersonal = (List<TCTrSched>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.TrScId,
                        CampoKy = f.TrScId,
                        Campo01 = @sDayofWeek(f.TrScDayOfWeek).ToString(),
                        Campo02 = string.Format("{0:HH:mm}",f.TrScCrLoadStart).ToString(),
                        Campo03 = string.Format("{0:HH:mm}",f.TrScCrDeparture).ToString(),
                        Campo04 = f.TrScDeno,
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }




    string isVisible(int panel){
        string retcol="";
        try{
        int opanel = (int)ViewData["vpanel"];
        if (opanel==panel){retcol="visible";}
        else{retcol="invisible";}
        }catch{}
        return retcol;
    }
string assVisible()
{
    string retcol="invisible";
    try{
    if ((int)ViewData["Assign"]==1)
    {retcol="visible";}
    }
    catch{}
    return retcol;
 }
}
<div class=" clearfix position-relative o_form_sheet center">

<div class="cont-titles">
<h3>@SharedLocalizer.GetLocalizedHtmlString("TruckEdit")</h3>
</div>
@using (Html.BeginForm()) {
    <div class="div-edit">
    @Html.HiddenFor(p => p.TruckId)
    @Html.ValidationSummary(true)
    <table class="table-edit">
        <tr>
            <td><input type="submit" class="dropbtn" value="Update"  name="actionType"/></td>
            <td><input type="submit" class="dropbtn" value="Cancel" name="actionType"/></td>
        </tr>
        @Html.Partial("_pshowTrucks",Model)
    </table>
    </div>
<div class=@isVisible(1)>
<table class="table-norm" border="1">
    <div class="cont-titles">
        <h4>@SharedLocalizer.GetLocalizedHtmlString("TruckSchedules")</h4>
    </div>
    @Html.dataGrid(19,7,@Columns("TruckSc"),@getData_TruckSc((List<TCTrSched>)ViewBag.ListSTrucks),@Controller("TruckSc"),@Fields("TruckSc"),Model.TruckId)
    @*@Html.Partial("_pListaTruckSchedules",(List<TCTrSched>)ViewBag.ListSTrucks)*@
</table>
@*@Html.ActionLink("Assign a new Schedule", "TrSCreate", new { tid= @Model.TruckId,vpanel=1})</div>*@
</div>
}
</div>