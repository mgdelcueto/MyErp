@*@{Layout = "_LyIndex";}*@
@using MyErp.Models
@model TFacility
@using MyErp.Extensions;
@using MyErp.Resources
@inject LocService SharedLocalizer
@functions {
    string parqsaction(int vpanel, string toremove)
        {
        //deja el ultimo parametroa rellenar con el Id de la tabla en el javascript del control grid
        string ret ="/"+Model.FaId.ToString()+"?panel=1&vpanel="+vpanel.ToString()+"&assign="+vpanel.ToString()+"&wass=0&"+toremove+"=";
        return ret;
        }

    string [] Controller(string table){
        string [] retur = new string [4];
        switch (table)
        {
        case "AsWCenter":
                retur[0]="TEngine";
                retur[1]="";            //Edit not enabled
                retur[2]="";            //Create not enabled
                retur[3]="FacEdit";     //delete is remove
                break;
        case "AsStorage":
                retur[0]="TEngine";
                retur[1]="";
                retur[2]="";
                retur[3]="FacEdit";
                break;
        default:
            break;
        }
        return retur;
    }
    List<string> addLine(string field, string ledit){
        List<string> retLin = new List<string>();
        retLin.Add(field);
        retLin.Add(ledit);
        return retLin;
    }
    List<List<string>>  Fields(string table){
        List<List<string>> retur = new List<List<string>>();
        switch (table)
        {
            case "AsWCenter":
                retur.Add(addLine("WcdId","false"));
                retur.Add(addLine("Wccode","false"));
                retur.Add(addLine("Wcdescr","true"));
                retur.Add(addLine("Wctype","false"));
                break;
            case "AsStorage":
                retur.Add(addLine("LocId","false"));
                retur.Add(addLine("LocCode","false"));
                retur.Add(addLine("LocDescr","true"));
                retur.Add(addLine("LocType","false"));
                break;
            default:
                break;
        }
        return retur;
    }
    List<string> Columns(string table){
        List<string> retur = new List<string>();
        switch (table)
        {
            case "AsWCenter":
                    retur.Add("WCenter");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("WCCode"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("WCDesc"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("WCType"));
                break;
            case "AsStorage":
                    retur.Add("AsStorage");
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Code"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Description"));
                    retur.Add(@SharedLocalizer.GetLocalizedHtmlString("Type"));
                break;
            default:
                break;
        }
        return retur;
    }
    IEnumerable<Container> getData_AsWCenter(dynamic oTMaterial)
        {
            IEnumerable<TWorkCenter> fTPersonal = (List<TWorkCenter>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.WcdId,
                        Campo01 = f.Wccode.ToString(),
                        Campo02 = f.Wcdescr.ToString(),
                        Campo03 = f.Wctype.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }

    IEnumerable<Container> getData_AsStorage(dynamic oTMaterial)
        {
            IEnumerable<TLocation> fTPersonal = (List<TLocation>)oTMaterial;
            IEnumerable<Container> TPersonal = fTPersonal.Select(
                f => new Container() 
                {
                        CampoId = f.LocId,
                        Campo01 = f.LocCode.ToString(),
                        Campo02 = f.LocDescr.ToString(),
                        Campo03 = f.LocType.ToString(),
                        Campo04 = "",
                        Campo05 = "",
                        Campo06 = "", 
                        Campo07 = "",
                        Campo08 = "",
                        Campo09 = "",
                        Campo10 = "",
                        Campo11 = "",
                        Campo12 = "",
                        Campo13 = "",
                        Campo14 = "",
                        Campo15 = ""
                });
            return TPersonal;
        }

    string isVisible(int panel){
        string retcol="";
        int opanel = (int)ViewData["vpanel"];
        if (opanel==panel){retcol="visible";}
        else{retcol="invisible";}
        return retcol;
    }
    string assVisible()
    {
        string retcol="invisible";
        try{
        if ((int)ViewData["Assign"]==1)
        {retcol="visible";}
        }
        catch{}
        return retcol;
    }

    string aslVisible()
    {
        string retcol="invisible";
        try{
        if ((int)ViewData["LAssign"]==1)
        {retcol="visible";}
        }
        catch{}
        return retcol;
    }
    private int VAssign(){
        int resul = 1;
        try{
        if ((int)ViewData["Assign"]==1)
        {resul=0;}
        }
        catch{}
        return resul;
    }
    private int LAssign(){
        int resul = 1;
        try{
        if ((int)ViewData["LAssign"]==1)
        {resul=0;}
        }
        catch{}
        return resul;
    }

}

<script>
    function AddFaComp(modulo,assign)
    {
        //asigna nuevo componente
        var e = document.getElementById(modulo);
        var value = e.options[e.selectedIndex].WcoId;  //me extra√±a WcoId para los dos ???
        var url=window.location.href.split("?")[0];
        url=url+"?"+e.name+"="+e.value.toString()+"&wass=1&wrem=0&assign="+assign.toString()+"&vpanel="+assign.toString();
        window.location.href = url;

    }
</script>

@*
<div class="cont-titles">
    <h3>@SharedLocalizer.GetLocalizedHtmlString("FEdit")</h3>
</div>
*@

<div class=" clearfix position-relative o_form_sheet center">

@Html.Partial("_pmenuFac_com",Model)
@using (Html.BeginForm()) {
    <div class="visible">
        @Html.HiddenFor(p => p.FaId)
        @Html.ValidationSummary(true)
        <table class="table-norm" border ="1">
        <tr>
            <td><input type="submit" class="dropbtn" value="Update"  name="actionType"/></td>
            <td><input type="submit" class="dropbtn" value="Cancel" name="actionType"/></td>
        </tr>
        @Html.Partial("_pshowFacilities",Model)
        </table>

@*@Html.Partial("_pmenuFac",Model)*@

<div class=@isVisible(2)>
    <table class="table-norm" border="1">
        <div class="cont-titles">
            <h4>@SharedLocalizer.GetLocalizedHtmlString("FStAss")</h4>
        </div>
        @*@Html.ActionLink("Assign a new Location", "FacEdit", new { id= @Model.FaId, wrel = 0,vpanel=2, wasl=1,assigl=@LAssign()})*@
        <td class="norm-lab-text">@SharedLocalizer.GetLocalizedHtmlString("FLotoAss")
             @Html.DropDownList("LocId", (SelectList)ViewBag.ddlLocNAS, new { @id ="myLocation", @class ="norm-tb-text" , onchange ="AddFaComp('myLocation',2);"  })
         </td>


        @Html.dataGrid(17,7,@Columns("AsStorage"),@getData_AsStorage((List<TLocation>)ViewBag.ListStorAs),@Controller("AsStorage"),@Fields("AsStorage"),0,@parqsaction(2,"wrem"))
        @*@Html.Partial("_pListaStorages",(List<TLocation>)ViewBag.ListStorAs)*@
    </table>

</div>

<div class=@isVisible(1)>

    <table class="table-norm" border="1">
        <div class="cont-titles">
            <h3>@SharedLocalizer.GetLocalizedHtmlString("FWCAss")</h3>
        </div>
        @*@Html.ActionLink("Assign a new work Center", "FacEdit", new { id= @Model.FaId,vpanel=1, wrem = 0, wass=1,assign=@VAssign()})*@
            <td class ="norm-lab-text" >@SharedLocalizer.GetLocalizedHtmlString("FWCtoAss")
                @Html.DropDownList("WcdId", (SelectList)ViewBag.ddlProdNAS, new { @id ="myWorkcenter",@class ="norm-tb-text" , onchange ="AddFaComp('myWorkcenter',1);" })
            </td>

        @Html.dataGrid(18,7,@Columns("AsWCenter"),@getData_AsWCenter((List<TWorkCenter>)ViewBag.ListProdAs),@Controller("AsWCenter"),@Fields("AsWCenter"),0,@parqsaction(1,"wrem"))
        @*@Html.Partial("_pListaWorkCenters",(List<TWorkCenter>)ViewBag.ListProdAs)*@
    </table>

</div>
</div>
}
</div>